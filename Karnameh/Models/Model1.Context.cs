//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Karnameh.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class KarnameDBEntities : DbContext
    {
        public KarnameDBEntities()
            : base("name=KarnameDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<tbl_Lessons> tbl_Lessons { get; set; }
        public DbSet<tbl_StudentClasses> tbl_StudentClasses { get; set; }
        public DbSet<tbl_Years> tbl_Years { get; set; }
        public DbSet<viw_Lessons> viw_Lessons { get; set; }
        public DbSet<viw_TeachersName> viw_TeachersName { get; set; }
        public DbSet<tbl_Managers> tbl_Managers { get; set; }
        public DbSet<tbl_MoaveninEjraei> tbl_MoaveninEjraei { get; set; }
        public DbSet<viw_Schools> viw_Schools { get; set; }
        public DbSet<viw_Managers_SchoolsLess> viw_Managers_SchoolsLess { get; set; }
        public DbSet<viw_MovanenEjraeiSchoolsLess> viw_MovanenEjraeiSchoolsLess { get; set; }
        public DbSet<tbl_Schools> tbl_Schools { get; set; }
        public DbSet<tbl_TosifAmalkard> tbl_TosifAmalkard { get; set; }
        public DbSet<viw_Classes> viw_Classes { get; set; }
        public DbSet<tbl_Teachers> tbl_Teachers { get; set; }
        public DbSet<viw_Teachers> viw_Teachers { get; set; }
        public DbSet<tbl_Classes> tbl_Classes { get; set; }
        public DbSet<tbl_Payeh> tbl_Payeh { get; set; }
        public DbSet<tbl_Students> tbl_Students { get; set; }
        public DbSet<tbl_Marks> tbl_Marks { get; set; }
        public DbSet<tbl_Karnameh> tbl_Karnameh { get; set; }
        public DbSet<tbl_Users> tbl_Users { get; set; }
    
        public virtual ObjectResult<FillTeachersNoClassWhitOwn_Result> FillTeachersNoClassWhitOwn(Nullable<long> school_id, Nullable<long> personalCode)
        {
            var school_idParameter = school_id.HasValue ?
                new ObjectParameter("School_id", school_id) :
                new ObjectParameter("School_id", typeof(long));
    
            var personalCodeParameter = personalCode.HasValue ?
                new ObjectParameter("PersonalCode", personalCode) :
                new ObjectParameter("PersonalCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FillTeachersNoClassWhitOwn_Result>("FillTeachersNoClassWhitOwn", school_idParameter, personalCodeParameter);
        }
    
        public virtual ObjectResult<FillTechersNoClass_Result> FillTechersNoClass(Nullable<long> school_id)
        {
            var school_idParameter = school_id.HasValue ?
                new ObjectParameter("School_id", school_id) :
                new ObjectParameter("School_id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FillTechersNoClass_Result>("FillTechersNoClass", school_idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int InseertPayeh(Nullable<int> id, string name, Nullable<bool> status, Nullable<int> tosif)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var tosifParameter = tosif.HasValue ?
                new ObjectParameter("Tosif", tosif) :
                new ObjectParameter("Tosif", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InseertPayeh", idParameter, nameParameter, statusParameter, tosifParameter);
        }
    
        public virtual int InsertLessons(Nullable<int> id, string name, Nullable<int> payeh_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var payeh_idParameter = payeh_id.HasValue ?
                new ObjectParameter("Payeh_id", payeh_id) :
                new ObjectParameter("Payeh_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLessons", idParameter, nameParameter, payeh_idParameter);
        }
    
        public virtual int InsertManagers(Nullable<long> personalCode, string codeMelli, string name, string lname, string fname, string birthDate)
        {
            var personalCodeParameter = personalCode.HasValue ?
                new ObjectParameter("PersonalCode", personalCode) :
                new ObjectParameter("PersonalCode", typeof(long));
    
            var codeMelliParameter = codeMelli != null ?
                new ObjectParameter("CodeMelli", codeMelli) :
                new ObjectParameter("CodeMelli", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var birthDateParameter = birthDate != null ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertManagers", personalCodeParameter, codeMelliParameter, nameParameter, lnameParameter, fnameParameter, birthDateParameter);
        }
    
        public virtual int InsertMoavenin(Nullable<long> personalCode, string codeMelli, string name, string lname, string fname, string birthDate)
        {
            var personalCodeParameter = personalCode.HasValue ?
                new ObjectParameter("PersonalCode", personalCode) :
                new ObjectParameter("PersonalCode", typeof(long));
    
            var codeMelliParameter = codeMelli != null ?
                new ObjectParameter("CodeMelli", codeMelli) :
                new ObjectParameter("CodeMelli", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var birthDateParameter = birthDate != null ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMoavenin", personalCodeParameter, codeMelliParameter, nameParameter, lnameParameter, fnameParameter, birthDateParameter);
        }
    
        public virtual int InsertSchools(Nullable<long> id, string name, Nullable<long> manager_id, Nullable<long> moaven_id, string password)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var manager_idParameter = manager_id.HasValue ?
                new ObjectParameter("Manager_id", manager_id) :
                new ObjectParameter("Manager_id", typeof(long));
    
            var moaven_idParameter = moaven_id.HasValue ?
                new ObjectParameter("Moaven_id", moaven_id) :
                new ObjectParameter("Moaven_id", typeof(long));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSchools", idParameter, nameParameter, manager_idParameter, moaven_idParameter, passwordParameter);
        }
    
        public virtual int InsertTosifAmalkard(Nullable<int> id, string name, Nullable<int> mark)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var markParameter = mark.HasValue ?
                new ObjectParameter("Mark", mark) :
                new ObjectParameter("Mark", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTosifAmalkard", idParameter, nameParameter, markParameter);
        }
    
        public virtual int InsertTeachers(Nullable<long> personalCode, string codeMelli, string name, string lname, string fname, Nullable<int> payeh_id_FK, Nullable<long> schools_id_FK)
        {
            var personalCodeParameter = personalCode.HasValue ?
                new ObjectParameter("PersonalCode", personalCode) :
                new ObjectParameter("PersonalCode", typeof(long));
    
            var codeMelliParameter = codeMelli != null ?
                new ObjectParameter("CodeMelli", codeMelli) :
                new ObjectParameter("CodeMelli", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var payeh_id_FKParameter = payeh_id_FK.HasValue ?
                new ObjectParameter("Payeh_id_FK", payeh_id_FK) :
                new ObjectParameter("Payeh_id_FK", typeof(int));
    
            var schools_id_FKParameter = schools_id_FK.HasValue ?
                new ObjectParameter("Schools_id_FK", schools_id_FK) :
                new ObjectParameter("Schools_id_FK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTeachers", personalCodeParameter, codeMelliParameter, nameParameter, lnameParameter, fnameParameter, payeh_id_FKParameter, schools_id_FKParameter);
        }
    
        public virtual int EditStudent(string student_id_FK)
        {
            var student_id_FKParameter = student_id_FK != null ?
                new ObjectParameter("Student_id_FK", student_id_FK) :
                new ObjectParameter("Student_id_FK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditStudent", student_id_FKParameter);
        }
    
        public virtual ObjectResult<FillStudentClasses_Result> FillStudentClasses(Nullable<int> years_id_FK, Nullable<long> class_id_FK)
        {
            var years_id_FKParameter = years_id_FK.HasValue ?
                new ObjectParameter("Years_id_FK", years_id_FK) :
                new ObjectParameter("Years_id_FK", typeof(int));
    
            var class_id_FKParameter = class_id_FK.HasValue ?
                new ObjectParameter("Class_id_FK", class_id_FK) :
                new ObjectParameter("Class_id_FK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FillStudentClasses_Result>("FillStudentClasses", years_id_FKParameter, class_id_FKParameter);
        }
    
        public virtual int EditKarnameh(Nullable<long> karnameh_id_FK, string comment, Nullable<bool> isRespect, string avarage, string dateSabt, Nullable<bool> isOk, Nullable<long> moavenEjraei_id_FK)
        {
            var karnameh_id_FKParameter = karnameh_id_FK.HasValue ?
                new ObjectParameter("Karnameh_id_FK", karnameh_id_FK) :
                new ObjectParameter("Karnameh_id_FK", typeof(long));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var isRespectParameter = isRespect.HasValue ?
                new ObjectParameter("IsRespect", isRespect) :
                new ObjectParameter("IsRespect", typeof(bool));
    
            var avarageParameter = avarage != null ?
                new ObjectParameter("Avarage", avarage) :
                new ObjectParameter("Avarage", typeof(string));
    
            var dateSabtParameter = dateSabt != null ?
                new ObjectParameter("DateSabt", dateSabt) :
                new ObjectParameter("DateSabt", typeof(string));
    
            var isOkParameter = isOk.HasValue ?
                new ObjectParameter("IsOk", isOk) :
                new ObjectParameter("IsOk", typeof(bool));
    
            var moavenEjraei_id_FKParameter = moavenEjraei_id_FK.HasValue ?
                new ObjectParameter("MoavenEjraei_id_FK", moavenEjraei_id_FK) :
                new ObjectParameter("MoavenEjraei_id_FK", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditKarnameh", karnameh_id_FKParameter, commentParameter, isRespectParameter, avarageParameter, dateSabtParameter, isOkParameter, moavenEjraei_id_FKParameter);
        }
    }
}
